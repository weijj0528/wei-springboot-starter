{
  "author" : "EasyCode",
  "version" : "1.2.8",
  "userSecure" : "",
  "currTypeMapperGroupName" : "WeiStarter",
  "currTemplateGroupName" : "WeiStarter",
  "currColumnConfigGroupName" : "WeiStarter",
  "currGlobalConfigGroupName" : "WeiStarter",
  "typeMapper" : {
    "WeiStarter" : {
      "name" : "WeiStarter",
      "elementList" : [ {
        "matchType" : "REGEX",
        "columnType" : "varchar(\\(\\d+\\))?",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "REGEX",
        "columnType" : "char(\\(\\d+\\))?",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "REGEX",
        "columnType" : "(tiny|medium|long)*text",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "REGEX",
        "columnType" : "decimal(\\(\\d+,\\d+\\))?",
        "javaType" : "java.math.BigDecimal"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "integer",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "tinyint(1)",
        "javaType" : "java.lang.Boolean"
      }, {
        "matchType" : "REGEX",
        "columnType" : "(tiny|small|medium)*int(\\(\\d+\\))?",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "int4",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "int8",
        "javaType" : "java.lang.Long"
      }, {
        "matchType" : "REGEX",
        "columnType" : "bigint(\\(\\d+\\))?",
        "javaType" : "java.lang.Long"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "date",
        "javaType" : "java.util.Date"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "datetime",
        "javaType" : "java.util.Date"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "timestamp",
        "javaType" : "java.util.Date"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "time",
        "javaType" : "java.time.LocalTime"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "boolean",
        "javaType" : "java.lang.Boolean"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "CHARACTER VARYING(16)",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "CHARACTER VARYING(255)",
        "javaType" : "java.lang.String"
      } ]
    }
  },
  "template" : {
    "WeiStarter" : {
      "name" : "WeiStarter",
      "elementList" : [ {
        "name" : "entity.java.vm",
        "code" : "##初始化\n$!{init.vm}\n\n##引入宏定义\n$!{define.vm}\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/model\", \".java\")\n\n##使用宏定义设置包后缀\n#setPackageSuffix(\"model\")\n\n##使用全局变量实现默认包导入\n$!{autoImport.vm}\nimport java.io.Serializable;\nimport javax.persistence.*;\n\n##使用宏定义实现类注释信息\n#tableComment(\"实体类\")\n@Table(name = \"$!{tableInfo.obj.name}\")\npublic class $!{tableInfo.name} implements Serializable {\n    private static final long serialVersionUID = $!tool.serial();\n#foreach($column in $tableInfo.pkColumn)\n    #if(${column.comment})/**\n     * ${column.comment}\n     */#end\n    \n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n#foreach($column in $tableInfo.otherColumn)\n    #if(${column.comment})/**\n     * ${column.comment}\n     */#end\n    #if(${column.name} != ${column.obj.name})\n    \n    @Column(name = \"${column.obj.name}\")#end\n    \n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n#foreach($column in $tableInfo.fullColumn)\n    \n    public static final String $!{tool.hump2Underline($!{column.name}).toUpperCase()} = \"$!{column.name}\";\n    \n    public static final String DB_$!{tool.hump2Underline($!{column.name}).toUpperCase()} = \"$!{column.obj.name}\";\n#end\n\n#foreach($column in $tableInfo.fullColumn)\n##使用宏定义实现get,set方法\n#getSetMethod($column)\n#end\n\n}\n"
      }, {
        "name" : "dto.java.vm",
        "code" : "##初始化\n$!{init.vm}\n\n##引入宏定义\n$!{define.vm}\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/dto\", \"DTO.java\")\n#set($dtoName = $!tool.append($tableInfo.name, \"DTO\"))\n##使用宏定义设置包后缀\n#setPackageSuffix(\"dto\")\n\n##使用全局变量实现默认包导入\n$!{autoImport.vm}\nimport java.io.Serializable;\n\n##使用宏定义实现类注释信息\n#tableComment(\"实体类\")\npublic class $!{dtoName} implements Serializable {\n    private static final long serialVersionUID = $!tool.serial();\n#foreach($column in $tableInfo.fullColumn)\n    #if(${column.comment})/**\n     * ${column.comment}\n     */#end\n\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n\n#foreach($column in $tableInfo.fullColumn)\n##使用宏定义实现get,set方法\n#getSetMethod($column)\n#end\n\n}\n"
      }, {
        "name" : "mapper.java.vm",
        "code" : "##初始化\n$!{init.vm}\n\n##引入宏定义\n$!{define.vm}\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/mapper\", \"Mapper.java\")\n#set($MapperClassName = $!tool.append($tableInfo.name, \"Mapper\"))\n##使用宏定义设置包后缀\n#setPackageSuffix(\"mapper\")\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\nimport $!{tableInfo.savePackageName}.model.$!{tableInfo.name};\nimport com.wei.starter.mybatis.xmapper.XMapper;\n\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})表数据库访问层\n *\n * @author $!author\n * @since $!time.currTime()\n */\npublic interface $!{MapperClassName} extends XMapper<$!{tableInfo.name}>{\n\n}\n"
      }, {
        "name" : "mapper.xml.vm",
        "code" : "##初始化\n$!{init.vm}\n\n##引入mybatis支持\n$!{mybatisSupport.vm}\n\n##设置保存名称与保存位置\n$!callback.setFileName($tool.append($!{tableInfo.name}, \"Mapper.xml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources/mapper\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"$!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper\">\n    \n    <resultMap id=\"BaseResultMap\" type=\"$!{tableInfo.savePackageName}.model.$!{tableInfo.name}\">\n        <!--\n          WARNING - @mbg.generated\n        -->\n#foreach($column in $tableInfo.fullColumn)\n        <result property=\"$!column.name\" column=\"$!column.obj.name\" jdbcType=\"$!column.ext.jdbcType\"/>\n#end\n    </resultMap>\n\n</mapper>\n"
      }, {
        "name" : "service.java.vm",
        "code" : "##初始化\n$!{init.vm}\n\n##引入宏定义\n$!{define.vm}\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/service\", \"Service.java\")\n\n## 类名\n#set($ServiceClassName = $!tool.append($tableInfo.name, \"Service\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n##使用宏定义设置包后缀\n#setPackageSuffix(\"service\")\n\nimport $!{tableInfo.savePackageName}.dto.$!{tableInfo.name}DTO;\nimport $!{tableInfo.savePackageName}.model.$!{tableInfo.name};\nimport com.wei.starter.base.bean.Page;\nimport com.wei.starter.mybatis.service.BaseService;\n\nimport java.util.List;\n\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})表服务接口\n *\n * @author $!author\n * @since $!time.currTime()\n */\npublic interface $!{ServiceClassName} extends BaseService<$!{tableInfo.name}> {\n\n    /**\n     * Save int.\n     *\n     * @param dto the $!{tableInfo.name} dto\n     * @return the int\n     */\n    int save($!{tableInfo.name}DTO dto);\n\n    /**\n     * Delete int.\n     *\n     * @param id the id\n     * @return the int\n     */\n    int delete(Object id);\n\n    /**\n     * Update int.\n     *\n     * @param dto the $!{tableInfo.name} dto\n     * @return the int\n     */\n    int update($!{tableInfo.name}DTO dto);\n\n    /**\n     * Details\n     *\n     * @param id the id\n     * @return the\n     */\n    $!{tableInfo.name}DTO details(Object id);\n\n    /**\n     * List.\n     *\n     * @return the list\n     * @param queryDto query\n     * @param page page\n     */\n    List<$!{tableInfo.name}DTO> list($!{tableInfo.name}DTO queryDto, Page<$!{tableInfo.name}DTO> page);\n\n}"
      }, {
        "name" : "serviceImpl.java.vm",
        "code" : "##初始化\n$!{init.vm}\n\n##引入宏定义\n$!{define.vm}\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/service/impl\", \"ServiceImpl.java\")\n\n## 类名\n#set($ServiceImplClassName = $!tool.append($tableInfo.name, \"ServiceImpl\"))\n## 变量名\n#set($variableName = $!tool.firstLowerCase($!{tableInfo.name}))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n##使用宏定义设置包后缀\n#setPackageSuffix(\"service.impl\")\n\nimport $!{tableInfo.savePackageName}.dto.$!{tableInfo.name}DTO;\nimport $!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper;\nimport $!{tableInfo.savePackageName}.model.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport com.wei.starter.base.bean.Page;\nimport com.wei.starter.base.util.WeiBeanUtil;\nimport com.wei.starter.mybatis.service.AbstractService;\nimport com.wei.starter.mybatis.xmapper.XMapper;\nimport org.springframework.stereotype.Service;\nimport tk.mybatis.mapper.entity.Example;\n\nimport javax.annotation.Resource;\nimport java.util.List;\n\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})表服务实现类\n *\n * @author $!author\n * @since $!time.currTime()\n */\n@Service(\"${variableName}Service\")\npublic class $!{ServiceImplClassName} extends AbstractService<$!{tableInfo.name}> implements $!{tableInfo.name}Service {\n\n    @Resource\n    private $!{tableInfo.name}Mapper ${variableName}Mapper;\n\n    @Override\n    public XMapper<$!{tableInfo.name}> getMapper() {\n        return ${variableName}Mapper;\n    }\n\n    /**\n     * Save int.\n     *\n     * @param dto\n     * @return the int\n     */\n    @Override\n    public int save($!{tableInfo.name}DTO dto) {\n        $!{tableInfo.name} ${variableName} = WeiBeanUtil.toBean(dto, $!{tableInfo.name}.class);\n        return getMapper().insertSelective(${variableName});\n    }\n\n    /**\n     * Delete int.\n     *\n     * @param id\n     * @return the int\n     */\n    @Override\n    public int delete(Object id) {\n        return getMapper().deleteByPrimaryKey(id);\n    }\n\n    /**\n     * Update int.\n     *\n     * @param dto\n     * @return the int\n     */\n    @Override\n    public int update($!{tableInfo.name}DTO dto) {\n        $!{tableInfo.name} ${variableName} = WeiBeanUtil.toBean(dto, $!{tableInfo.name}.class);\n        return getMapper().updateByPrimaryKeySelective(${variableName});\n    }\n\n    /**\n     * Details ${variableName} dto.\n     *\n     * @return the ${variableName} dto\n     */\n    @Override\n    public $!{tableInfo.name}DTO details(Object id) {\n        $!{tableInfo.name} ${variableName} = getMapper().selectByPrimaryKey(id);\n        return WeiBeanUtil.toBean(${variableName}, $!{tableInfo.name}DTO.class);\n    }\n\n    /**\n     * List list.\n     *\n     * @param queryDto\n     * @param page\n     * @return the list\n     */\n    @Override\n    public List<$!{tableInfo.name}DTO> list($!{tableInfo.name}DTO queryDto, Page<$!{tableInfo.name}DTO> page) {\n        Example example = new Example($!{tableInfo.name}.class);\n        Example.Criteria criteria = example.createCriteria();\n        // TODO 查询条件组装\n        Page<$!{tableInfo.name}> ${variableName}Page = new Page<>();\n        ${variableName}Page.setPage(page.getPage());\n        ${variableName}Page.setSize(page.getSize());\n        selectPageByExample(example, ${variableName}Page);\n        List<$!{tableInfo.name}DTO> ${variableName}DtoList = WeiBeanUtil.toList(${variableName}Page.getList(), $!{tableInfo.name}DTO.class);\n        page.setTotal(${variableName}Page.getTotal());\n        page.setList(${variableName}DtoList);\n        return ${variableName}DtoList;\n    }\n}"
      }, {
        "name" : "controller.java.vm",
        "code" : "##初始化\n$!{init.vm}\n\n##引入宏定义\n$!{define.vm}\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/controller\", \"Controller.java\")\n\n## 类名\n#set($ControllerClassName = $!tool.append($tableInfo.name, \"Controller\"))\n## 变量名\n#set($shortClassName = $!{tableInfo.name})\n## 变量名\n#set($variableName = $!tool.firstLowerCase($!{tableInfo.name}))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n##使用宏定义设置包后缀\n#setPackageSuffix(\"controller\")\n\nimport $!{tableInfo.savePackageName}.dto.$!{tableInfo.name}DTO;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport com.wei.starter.base.bean.Page;\nimport com.wei.starter.base.bean.Result;\nimport com.wei.starter.base.valid.Add;\nimport com.wei.starter.base.valid.Update;\nimport org.springframework.validation.annotation.Validated;\nimport org.springframework.web.bind.annotation.*;\n\nimport javax.annotation.Resource;\n\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})表控制层\n *\n * @author $!author\n * @since $!time.currTime()\n */\n@RestController\n@RequestMapping(\"/$!tool.firstLowerCase($tableInfo.name)\")\npublic class ${shortClassName}Controller {\n\n    @Resource\n    private ${shortClassName}Service ${variableName}Service;\n\n    /**\n     * 新增保存\n     *\n     * @param saveDto the save dto\n     * @return the result\n     */\n    @PostMapping\n    public Result<Void> save(@RequestBody @Validated(Add.class) ${shortClassName}DTO saveDto) {\n        ${variableName}Service.save(saveDto);\n        return Result.success();\n    }\n\n    /**\n     * 按主键更新\n     * PUT请求会报告安全问题，这里使用POST请求替代\n     *\n     * @param id        the id\n     * @param updateDto the update dto\n     * @return the result\n     */\n    @PostMapping(\"/{id}\")\n    public Result<Void> update(@PathVariable Long id, @RequestBody @Validated(Update.class) ${shortClassName}DTO updateDto) {\n        updateDto.setId(id);\n        ${variableName}Service.update(updateDto);\n        return Result.success();\n    }\n    \n    /**\n     * 按主键删除\n     * DELETE请求会报告安全问题，这里使用POST请求替代\n     *\n     * @param id the id\n     * @return the result\n     */\n    @PostMapping(\"/del/{id}\")\n    public Result<Void> delete(@PathVariable Long id) {\n        ${variableName}Service.delete(id);\n        return Result.success();\n    }\n    \n    /**\n     * 详情查询\n     *\n     * @param id the id\n     * @return the result\n     */\n    @GetMapping(\"/{id}\")\n    public Result<${shortClassName}DTO> details(@PathVariable Long id) {\n        ${shortClassName}DTO details = ${variableName}Service.details(id);\n        return Result.success(details);\n    }\n    \n    /**\n     * 分页查询\n     *\n     * @param queryDto the query dto\n     * @param page     the page\n     * @return the result\n     */\n    @GetMapping\n    public Result<Page<${shortClassName}DTO>> page(${shortClassName}DTO queryDto, Page<${shortClassName}DTO> page) {\n        ${variableName}Service.list(queryDto, page);\n        return Result.success(page);\n    }\n\n}"
      }, {
        "name" : "debug.json.vm",
        "code" : "// 禁止将生成结果写入到文件\n$!callback.setWriteFile(false)\n\n//调试表原始对象\n$!tool.debug($tableInfo.obj)\n\n//调试列原始对象\n$!tool.debug($tableInfo.fullColumn.get(0).obj)\n\n//调试列原始列类型\n$!tool.debug($tableInfo.fullColumn.get(0).obj.dataType)\n\n//获取原始列类型中的字段\nsqlType = $!tool.getField($tableInfo.fullColumn.get(0).obj.dataType, \"typeName\")\n\n//执行原始列类型中的方法\nsqlTypeLen = $!tableInfo.fullColumn.get(0).obj.dataType.getLength()\n"
      } ]
    }
  },
  "columnConfig" : {
    "WeiStarter" : {
      "name" : "WeiStarter",
      "elementList" : [ {
        "title" : "disable",
        "type" : "BOOLEAN",
        "selectValue" : ""
      }, {
        "title" : "support",
        "type" : "SELECT",
        "selectValue" : "add,edit,query,del,ui"
      } ]
    }
  },
  "globalConfig" : {
    "WeiStarter" : {
      "name" : "WeiStarter",
      "elementList" : [ {
        "name" : "autoImport.vm",
        "value" : "##自动导入包（仅导入实体属性需要的包，通常用于实体类）\n#foreach($import in $importList)\nimport $!import;\n#end"
      }, {
        "name" : "define.vm",
        "value" : "##（Velocity宏定义）\n\n##定义设置表名后缀的宏定义，调用方式：#setTableSuffix(\"Test\")\n#macro(setTableSuffix $suffix)\n    #set($tableName = $!tool.append($tableInfo.name, $suffix))\n#end\n\n##定义设置包名后缀的宏定义，调用方式：#setPackageSuffix(\"Test\")\n#macro(setPackageSuffix $suffix)\n#if($suffix!=\"\")package #end#if($tableInfo.savePackageName!=\"\")$!{tableInfo.savePackageName}.#{end}$!suffix;\n#end\n\n##定义直接保存路径与文件名简化的宏定义，调用方式：#save(\"/entity\", \".java\")\n#macro(save $path $fileName)\n    $!callback.setSavePath($tool.append($tableInfo.savePath, $path))\n    $!callback.setFileName($tool.append($tableInfo.name, $fileName))\n#end\n\n##定义表注释的宏定义，调用方式：#tableComment(\"注释信息\")\n#macro(tableComment $desc)\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})$desc\n *\n * @author $!author\n * @since $!time.currTime()\n */\n#end\n\n##定义GET，SET方法的宏定义，调用方式：#getSetMethod($column)\n#macro(getSetMethod $column)\n\n    public $!{tool.getClsNameByFullName($column.type)} get$!{tool.firstUpperCase($column.name)}() {\n        return $!{column.name};\n    }\n\n    public void set$!{tool.firstUpperCase($column.name)}($!{tool.getClsNameByFullName($column.type)} $!{column.name}) {\n        this.$!{column.name} = $!{column.name};\n    }\n#end"
      }, {
        "name" : "init.vm",
        "value" : "##初始化区域\n\n##去掉表的t_前缀\n##$!tableInfo.setName($tool.getClassName($tableInfo.obj.name.replaceFirst(\"t_\",\"\")))\n\n##参考阿里巴巴开发手册，POJO 类中布尔类型的变量，都不要加 is 前缀，否则部分框架解析会引起序列化错误\n#foreach($column in $tableInfo.fullColumn)\n#if($column.name.startsWith(\"is\") && $column.type.equals(\"java.lang.Boolean\"))\n    $!column.setName($tool.firstLowerCase($column.name.substring(2)))\n#end\n#end\n\n##实现动态排除列\n#set($temp = $tool.newHashSet(\"testCreateTime\", \"otherColumn\"))\n#foreach($item in $temp)\n    #set($newList = $tool.newArrayList())\n    #foreach($column in $tableInfo.fullColumn)\n        #if($column.name!=$item)\n            ##带有反回值的方法调用时使用$tool.call来消除返回值\n            $tool.call($newList.add($column))\n        #end\n    #end\n    ##重新保存\n    $tableInfo.setFullColumn($newList)\n#end\n\n##对importList进行篡改\n#set($temp = $tool.newHashSet())\n#foreach($column in $tableInfo.fullColumn)\n    #if(!$column.type.startsWith(\"java.lang.\"))\n        ##带有反回值的方法调用时使用$tool.call来消除返回值\n        $tool.call($temp.add($column.type))\n    #end\n#end\n##覆盖\n#set($importList = $temp)"
      }, {
        "name" : "mybatisSupport.vm",
        "value" : "##针对Mybatis 进行支持，主要用于生成xml文件\n#foreach($column in $tableInfo.fullColumn)\n    ##储存列类型\n    $tool.call($column.ext.put(\"sqlType\", $tool.getField($column.obj.dataType, \"typeName\")))\n    #if($tool.newHashSet(\"java.lang.String\").contains($column.type))\n        #set($jdbcType=\"VARCHAR\")\n    #elseif($tool.newHashSet(\"java.lang.Boolean\", \"boolean\").contains($column.type))\n        #set($jdbcType=\"BOOLEAN\")\n    #elseif($tool.newHashSet(\"java.lang.Byte\", \"byte\").contains($column.type))\n        #set($jdbcType=\"BYTE\")\n    #elseif($tool.newHashSet(\"java.lang.Integer\", \"int\", \"java.lang.Short\", \"short\").contains($column.type))\n        #set($jdbcType=\"INTEGER\")\n    #elseif($tool.newHashSet(\"java.lang.Long\", \"long\").contains($column.type))\n        #set($jdbcType=\"INTEGER\")\n    #elseif($tool.newHashSet(\"java.lang.Float\", \"float\", \"java.lang.Double\", \"double\").contains($column.type))\n        #set($jdbcType=\"NUMERIC\")\n    #elseif($tool.newHashSet(\"java.util.Date\", \"java.sql.Timestamp\", \"java.time.Instant\", \"java.time.LocalDateTime\", \"java.time.OffsetDateTime\", \"\tjava.time.ZonedDateTime\").contains($column.type))\n        #set($jdbcType=\"TIMESTAMP\")\n    #elseif($tool.newHashSet(\"java.sql.Date\", \"java.time.LocalDate\").contains($column.type))\n        #set($jdbcType=\"TIMESTAMP\")\n    #else\n        ##其他类型\n        #set($jdbcType=\"VARCHAR\")\n    #end\n    $tool.call($column.ext.put(\"jdbcType\", $jdbcType))\n#end\n\n##定义宏，查询所有列\n#macro(allSqlColumn)#foreach($column in $tableInfo.fullColumn)$column.obj.name#if($velocityHasNext), #end#end#end\n"
      } ]
    }
  }
}